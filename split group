{"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16902,"status":"ok","timestamp":1642574883622,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"},"user_tz":-480},"id":"r7rz_lkhpGz1","outputId":"057900dc-ede2-4c27-d8f1-a5d19e77e2fb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":[" from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"12AKIqZVpeSe","executionInfo":{"status":"ok","timestamp":1642574905675,"user_tz":-480,"elapsed":292,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}}},"outputs":[],"source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"Losp040xp6zb","executionInfo":{"status":"ok","timestamp":1642574926875,"user_tz":-480,"elapsed":4748,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}}},"outputs":[],"source":["Test_IDs = pd.read_csv('/content/drive/MyDrive/HTML final project/Test_IDs.csv')\n","Train_IDs = pd.read_csv('/content/drive/MyDrive/HTML final project/Train_IDs.csv')\n","status = pd.read_csv('/content/drive/MyDrive/HTML final project/status.csv')\n","\n","demographics = pd.read_csv('/content/drive/MyDrive/HTML final project/demographics.csv')\n","location = pd.read_csv('/content/drive/MyDrive/HTML final project/location.csv')\n","population = pd.read_csv('/content/drive/MyDrive/HTML final project/population.csv')\n","location = pd.merge(location, population, on=\"Zip Code\", how=\"outer\")\n","satisfaction = pd.read_csv('/content/drive/MyDrive/HTML final project/satisfaction.csv')\n","services = pd.read_csv('/content/drive/MyDrive/HTML final project/services.csv')\n","\n","\n","location2 = pd.read_csv('/content/drive/MyDrive/HTML final project/location_with_population_and_fill_in_nan.csv')"]},{"cell_type":"markdown","metadata":{"id":"m31uCAjaewUa"},"source":["Convert string to int"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"D3LDcmmUenNA","executionInfo":{"status":"ok","timestamp":1642574927355,"user_tz":-480,"elapsed":484,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}}},"outputs":[],"source":["\n","# merge location.csv and population.csv\n","# location['Population'] = location['Zip Code'].map(population.set_index('Zip Code')['Population'])\n","\n","\n","\n","\n","# fill in NaN because all values are same\n","location.fillna(value = {\"Count\": 1.0, \"Country\": 'United States', \"State\": 'California'}, inplace = True)\n","services.fillna(value = {\"Count\": 1.0, \"Quarter\": 'Q3'}, inplace = True)\n","\n","\n","\n","\n","# change string to value\n","# change string to value\n","# change string to value\n","demographics['Gender'].replace(['Female', 'Male'], [0, 1],inplace = True)\n","demographics['Under 30'].replace(['No', 'Yes'], [0, 1],inplace = True)\n","demographics['Senior Citizen'].replace(['No', 'Yes'], [0, 1],inplace = True)\n","demographics['Married'].replace(['No', 'Yes'], [0, 1],inplace = True)\n","demographics['Dependents'].replace(['No', 'Yes'], [0, 1],inplace = True)\n","location['Country'].replace(['United States'], [0.0],inplace = True)\n","location['State'].replace(['California'], [0.0],inplace = True)\n","services['Quarter'].replace(['Q3'], [1.0], inplace = True)\n","services['Referred a Friend'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Phone Service'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Multiple Lines'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Internet Service'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Online Security'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Online Backup'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Device Protection Plan'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Premium Tech Support'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Streaming TV'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Streaming Movies'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Streaming Music'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Unlimited Data'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","services['Paperless Billing'].replace(['No', 'Yes'], [0, 1], inplace = True)\n","\n","# ['Acampo', 'Acton', 'Adelanto', ...... , 'Yucca Valley', 'Zenia'] to [0, 1, 2, ......, 1100]\n","location['City'].replace(sorted(location['City'].loc[~location['City'].isnull()].unique()),\n","                         list(range(len(location['City'].loc[~location['City'].isnull()].unique()))), inplace = True)\n","# offer (None, A, B, C, D, E) to (0, 1, 2, 3, 4, 5)\n","services['Offer'].replace(sorted(services['Offer'].loc[~services['Offer'].isnull()].unique()),\n","                          list(range(len(services['Offer'].loc[~services['Offer'].isnull()].unique()))), inplace = True)\n","# ['Cable', 'DSL', 'Fiber Optic', 'None'] to [0, 1, 2, 3]\n","services['Internet Type'].replace(sorted(services['Internet Type'].loc[~services['Internet Type'].isnull()].unique()),\n","                         list(range(len(services['Internet Type'].loc[~services['Internet Type'].isnull()].unique()))), inplace = True)\n","# ['Month-to-Month', 'One Year', 'Two Year'] to [0, 1, 2]\n","services['Contract'].replace(sorted(services['Contract'].loc[~services['Contract'].isnull()].unique()),\n","                         list(range(len(services['Contract'].loc[~services['Contract'].isnull()].unique()))), inplace = True)\n","# ['Bank Withdrawal', 'Credit Card', 'Mailed Check'] to [0, 1, 2]\n","services['Payment Method'].replace(sorted(services['Payment Method'].loc[~services['Payment Method'].isnull()].unique()),\n","                         list(range(len(services['Payment Method'].loc[~services['Payment Method'].isnull()].unique()))), inplace = True)\n","\n","location.drop(['Lat Long'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"dwnhrmg1wW_J","executionInfo":{"status":"ok","timestamp":1642574928357,"user_tz":-480,"elapsed":5,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}}},"outputs":[],"source":["mapping = {'Yes': 1, 'No': 0}\n","mapping_result = {\n","'No Churn': 0,\n","'Competitor': 1,\n","'Dissatisfaction': 2,\n","'Attitude': 3,\n","'Price': 4,\n","'Other': 5 }"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1642574928358,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"},"user_tz":-480},"id":"8va817Dwf6Vm","outputId":"ea5c0479-d93e-4188-b493-bee71222e464"},"outputs":[{"output_type":"stream","name":"stdout","text":["(5634, 1)\n"]}],"source":["print(Train_IDs.shape)"]},{"cell_type":"code","source":["location.drop(['Count'], axis=1, inplace=True)\n","services.drop(['Count'], axis=1, inplace=True)\n","data = pd.merge(pd.merge(demographics, location, on=[\"Customer ID\"],how = 'outer'),\n","                pd.merge(services, satisfaction, on=[\"Customer ID\"],how = 'outer'), on=[\"Customer ID\"],how = 'outer')\n","\n","data = pd.merge(data, status, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"outer\").replace({'Churn Category': mapping_result})\n","\n","train_data = pd.merge(data, Train_IDs, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"inner\")\n","train_data.to_csv('/content/drive/MyDrive/HTML final project/all_train(with_churnCategory_NaN).csv')"],"metadata":{"id":"qcUmU1XjYGpn","executionInfo":{"status":"ok","timestamp":1642574930155,"user_tz":-480,"elapsed":1338,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["train_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":731},"id":"CNrKpUvEZmYG","executionInfo":{"status":"ok","timestamp":1642574930158,"user_tz":-480,"elapsed":6,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}},"outputId":"64219226-f388-4ead-8a19-dea463b8581e"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-6b635a4a-dc37-41c0-9c69-ede4ff28e2e1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Count</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Under 30</th>\n","      <th>Senior Citizen</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Number of Dependents</th>\n","      <th>Country</th>\n","      <th>State</th>\n","      <th>City</th>\n","      <th>Zip Code</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>ID</th>\n","      <th>Population</th>\n","      <th>Quarter</th>\n","      <th>Referred a Friend</th>\n","      <th>Number of Referrals</th>\n","      <th>Tenure in Months</th>\n","      <th>Offer</th>\n","      <th>Phone Service</th>\n","      <th>Avg Monthly Long Distance Charges</th>\n","      <th>Multiple Lines</th>\n","      <th>Internet Service</th>\n","      <th>Internet Type</th>\n","      <th>Avg Monthly GB Download</th>\n","      <th>Online Security</th>\n","      <th>Online Backup</th>\n","      <th>Device Protection Plan</th>\n","      <th>Premium Tech Support</th>\n","      <th>Streaming TV</th>\n","      <th>Streaming Movies</th>\n","      <th>Streaming Music</th>\n","      <th>Unlimited Data</th>\n","      <th>Contract</th>\n","      <th>Paperless Billing</th>\n","      <th>Payment Method</th>\n","      <th>Monthly Charge</th>\n","      <th>Total Charges</th>\n","      <th>Total Refunds</th>\n","      <th>Total Extra Data Charges</th>\n","      <th>Total Long Distance Charges</th>\n","      <th>Total Revenue</th>\n","      <th>Satisfaction Score</th>\n","      <th>Churn Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1746-TGTWV</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>78.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>550.0</td>\n","      <td>90022.0</td>\n","      <td>34.023810</td>\n","      <td>-118.156582</td>\n","      <td>21.0</td>\n","      <td>68701.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.65</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>0.00</td>\n","      <td>59.65</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8499-BRXTD</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>74.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>48.85</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>17.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>80.65</td>\n","      <td>633.30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>390.80</td>\n","      <td>1024.10</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2041-JIJCI</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>71.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>550.0</td>\n","      <td>NaN</td>\n","      <td>34.108833</td>\n","      <td>-118.229715</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5832-EXGTT</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>78.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>445.0</td>\n","      <td>90303.0</td>\n","      <td>33.936291</td>\n","      <td>-118.332639</td>\n","      <td>100.0</td>\n","      <td>27778.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>25.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>19.76</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>12.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>98.50</td>\n","      <td>2514.50</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>494.00</td>\n","      <td>2995.07</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8350-NYMVI</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>80.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1067.0</td>\n","      <td>90602.0</td>\n","      <td>NaN</td>\n","      <td>-118.020188</td>\n","      <td>114.0</td>\n","      <td>26265.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>37.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>6.33</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>76.50</td>\n","      <td>2868.15</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>234.21</td>\n","      <td>3102.36</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5629</th>\n","      <td>5364-XYIRR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5630</th>\n","      <td>8046-DNVTL</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5631</th>\n","      <td>6981-TDRFT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5632</th>\n","      <td>3094-JOJAI</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5633</th>\n","      <td>9079-YEXQJ</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5634 rows × 47 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b635a4a-dc37-41c0-9c69-ede4ff28e2e1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6b635a4a-dc37-41c0-9c69-ede4ff28e2e1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6b635a4a-dc37-41c0-9c69-ede4ff28e2e1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     Customer ID  Count  ...  Satisfaction Score  Churn Category\n","0     1746-TGTWV    1.0  ...                 NaN             1.0\n","1     8499-BRXTD    1.0  ...                 3.0             1.0\n","2     2041-JIJCI    1.0  ...                 NaN             1.0\n","3     5832-EXGTT    1.0  ...                 2.0             2.0\n","4     8350-NYMVI    NaN  ...                 2.0             4.0\n","...          ...    ...  ...                 ...             ...\n","5629  5364-XYIRR    NaN  ...                 2.0             NaN\n","5630  8046-DNVTL    NaN  ...                 5.0             NaN\n","5631  6981-TDRFT    NaN  ...                 4.0             0.0\n","5632  3094-JOJAI    NaN  ...                 5.0             0.0\n","5633  9079-YEXQJ    NaN  ...                 4.0             0.0\n","\n","[5634 rows x 47 columns]"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["# Impute\n"],"metadata":{"id":"68FNFwThoKNg"}},{"cell_type":"code","source":["!pip install fancyimpute"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xUCdXH1poOi0","executionInfo":{"status":"ok","timestamp":1642574934057,"user_tz":-480,"elapsed":3121,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}},"outputId":"07135307-027c-44f1-c208-14fff08bdea1"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: fancyimpute in /usr/local/lib/python3.7/dist-packages (0.7.0)\n","Requirement already satisfied: nose in /usr/local/lib/python3.7/dist-packages (from fancyimpute) (1.3.7)\n","Requirement already satisfied: knnimpute>=0.1.0 in /usr/local/lib/python3.7/dist-packages (from fancyimpute) (0.1.0)\n","Requirement already satisfied: pytest in /usr/local/lib/python3.7/dist-packages (from fancyimpute) (3.6.4)\n","Requirement already satisfied: cvxopt in /usr/local/lib/python3.7/dist-packages (from fancyimpute) (1.2.7)\n","Requirement already satisfied: cvxpy in /usr/local/lib/python3.7/dist-packages (from fancyimpute) (1.0.31)\n","Requirement already satisfied: scikit-learn>=0.24.2 in /usr/local/lib/python3.7/dist-packages (from fancyimpute) (1.0.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from knnimpute>=0.1.0->fancyimpute) (1.15.0)\n","Requirement already satisfied: numpy>=1.10 in /usr/local/lib/python3.7/dist-packages (from knnimpute>=0.1.0->fancyimpute) (1.19.5)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.2->fancyimpute) (1.1.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.2->fancyimpute) (3.0.0)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.24.2->fancyimpute) (1.4.1)\n","Requirement already satisfied: multiprocess in /usr/local/lib/python3.7/dist-packages (from cvxpy->fancyimpute) (0.70.12.2)\n","Requirement already satisfied: ecos>=2 in /usr/local/lib/python3.7/dist-packages (from cvxpy->fancyimpute) (2.0.10)\n","Requirement already satisfied: osqp>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from cvxpy->fancyimpute) (0.6.2.post0)\n","Requirement already satisfied: scs>=1.1.3 in /usr/local/lib/python3.7/dist-packages (from cvxpy->fancyimpute) (3.0.1)\n","Requirement already satisfied: qdldl in /usr/local/lib/python3.7/dist-packages (from osqp>=0.4.1->cvxpy->fancyimpute) (0.1.5.post0)\n","Requirement already satisfied: dill>=0.3.4 in /usr/local/lib/python3.7/dist-packages (from multiprocess->cvxpy->fancyimpute) (0.3.4)\n","Requirement already satisfied: atomicwrites>=1.0 in /usr/local/lib/python3.7/dist-packages (from pytest->fancyimpute) (1.4.0)\n","Requirement already satisfied: pluggy<0.8,>=0.5 in /usr/local/lib/python3.7/dist-packages (from pytest->fancyimpute) (0.7.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from pytest->fancyimpute) (57.4.0)\n","Requirement already satisfied: py>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from pytest->fancyimpute) (1.11.0)\n","Requirement already satisfied: more-itertools>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from pytest->fancyimpute) (8.12.0)\n","Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.7/dist-packages (from pytest->fancyimpute) (21.4.0)\n"]}]},{"cell_type":"code","source":["from fancyimpute import KNN, NuclearNormMinimization, SoftImpute, BiScaler\n","\n","\n","location2 = pd.read_csv('/content/drive/MyDrive/HTML final project/location_with_population_and_fill_in_nan.csv')\n","# X is the complete data matrix\n","# X_incomplete has the same values as X except a subset have been replace with NaN\n","\n","# Use 3 nearest rows which have a feature to fill in each row's missing features\n","# X_filled_knn = KNN(k=3).fit_transform(all)\n","\n","# # matrix completion using convex optimization to find low-rank solution\n","# # that still matches observed values. Slow!\n","# X_filled_nnm = NuclearNormMinimization().fit_transform(x_val_train)\n","\n","# # Instead of solving the nuclear norm objective directly, instead\n","# # induce sparsity using singular value thresholding\n","# X_incomplete_normalized = BiScaler().fit_transform(x_val_train)\n","Impute_demographics = demographics.copy()\n","Impute_location = location.copy()\n","Impute_services = services.copy()\n","\n","softImpute = SoftImpute()\n","Impute_demographics[demographics.columns[1:]] = softImpute.fit_transform(demographics[demographics.columns[1:]])\n","Impute_location[location.columns[1:]] = softImpute.fit_transform(location[location.columns[1:]])\n","Impute_services[services.columns[1:]] = softImpute.fit_transform(services[services.columns[1:]])\n","#Impute_location.drop(['Count'], axis=1, inplace=True)\n","#Impute_services.drop(['Count'], axis=1, inplace=True)\n","data = pd.merge(pd.merge(Impute_demographics, Impute_location, on=[\"Customer ID\"],how = 'outer'),\n","                pd.merge(Impute_services, satisfaction, on=[\"Customer ID\"],how = 'outer'), on=[\"Customer ID\"],how = 'outer')\n","\n","test = pd.merge(data, Test_IDs, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"inner\").replace({'Churn Category': mapping_result})\n","\n","# train = pd.merge(data, Train_IDs, how=\"inner\", on=\"Customer ID\")\n","data = pd.merge(data, status, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"inner\").replace({'Churn Category': mapping_result})\n","data = data.dropna(subset=['Customer ID'])\n","test.to_csv('/content/drive/MyDrive/HTML final project/all_impute_test.csv')\n","data.to_csv('/content/drive/MyDrive/HTML final project/all_impute_data.csv')\n","print(len(demographics.columns.to_list()))\n","print(len(location.columns.to_list()))\n","print(len(services.columns.to_list()))\n","\n","for i in [0,1]:\n","  for j in [0,1]:\n","    for k in [0,1]:\n","      sset = []\n","      if i != 0:\n","        sset = list(set(sset+demographics.columns.to_list()))\n","      if j != 0:\n","        sset = list(set(sset+location.columns.to_list()))\n","      if k != 0:\n","        sset = list(set(sset+services.columns.to_list()))\n","      print(str(i*4+j*2+k)+': '+('' if i==0 else 'demographics, ')+('' if j==0 else 'location, ')+('' if k==0 else 'services, '))\n","      print(sset)\n","      if i+j+k != 0:\n","        g1 = data.dropna(subset=sset)[sset]\n","        g1 = pd.merge(g1, satisfaction, on=[\"Customer ID\"],how = 'outer')\n","        g1 = pd.merge(g1, status, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"inner\").replace({'Churn Category': mapping_result})\n","        g1 = g1.dropna(subset=['Customer ID'])\n","        g1 = g1.dropna(subset=sset)\n","        #g1.drop(['Customer ID'], axis=1, inplace=True)\n","        #if(i != 0):\n","        #  g1.drop(['Count'], axis=1, inplace=True)\n","        #if(j != 0):\n","        #  g1.drop(['State', 'ID', 'Country','Count'], axis=1, inplace=True)\n","        #if(k != 0):\n","         # g1.drop(['Quarter', 'Count'], axis=1, inplace=True)\n","        g1.to_csv('/content/drive/MyDrive/HTML final project/train_group'+str(i*4+j*2+k)+'.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gWcF57RAoMFn","executionInfo":{"status":"ok","timestamp":1642575101032,"user_tz":-480,"elapsed":6872,"user":{"displayName":"fang willy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08439978241789894764"}},"outputId":"eab3f235-f7a3-46d9-871c-a26d767cfe72"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[SoftImpute] Max Singular Value of X_init = 3648.938420\n","[SoftImpute] Iter 1: observed MAE=0.456621 rank=2\n","[SoftImpute] Iter 2: observed MAE=0.460738 rank=2\n","[SoftImpute] Iter 3: observed MAE=0.461635 rank=2\n","[SoftImpute] Iter 4: observed MAE=0.461791 rank=2\n","[SoftImpute] Iter 5: observed MAE=0.461819 rank=2\n","[SoftImpute] Iter 6: observed MAE=0.461826 rank=2\n","[SoftImpute] Iter 7: observed MAE=0.461829 rank=2\n","[SoftImpute] Iter 8: observed MAE=0.461831 rank=2\n","[SoftImpute] Iter 9: observed MAE=0.461832 rank=2\n","[SoftImpute] Iter 10: observed MAE=0.461834 rank=2\n","[SoftImpute] Iter 11: observed MAE=0.461835 rank=2\n","[SoftImpute] Iter 12: observed MAE=0.461837 rank=2\n","[SoftImpute] Iter 13: observed MAE=0.461838 rank=2\n","[SoftImpute] Iter 14: observed MAE=0.461839 rank=2\n","[SoftImpute] Iter 15: observed MAE=0.461841 rank=2\n","[SoftImpute] Iter 16: observed MAE=0.461842 rank=2\n","[SoftImpute] Iter 17: observed MAE=0.461843 rank=2\n","[SoftImpute] Iter 18: observed MAE=0.461845 rank=2\n","[SoftImpute] Iter 19: observed MAE=0.461846 rank=2\n","[SoftImpute] Iter 20: observed MAE=0.461848 rank=2\n","[SoftImpute] Iter 21: observed MAE=0.461849 rank=2\n","[SoftImpute] Iter 22: observed MAE=0.461851 rank=2\n","[SoftImpute] Iter 23: observed MAE=0.461853 rank=2\n","[SoftImpute] Iter 24: observed MAE=0.461854 rank=2\n","[SoftImpute] Iter 25: observed MAE=0.461856 rank=2\n","[SoftImpute] Iter 26: observed MAE=0.461858 rank=2\n","[SoftImpute] Iter 27: observed MAE=0.461859 rank=2\n","[SoftImpute] Iter 28: observed MAE=0.461861 rank=2\n","[SoftImpute] Iter 29: observed MAE=0.461862 rank=2\n","[SoftImpute] Iter 30: observed MAE=0.461864 rank=2\n","[SoftImpute] Iter 31: observed MAE=0.461866 rank=2\n","[SoftImpute] Iter 32: observed MAE=0.461867 rank=2\n","[SoftImpute] Iter 33: observed MAE=0.461869 rank=2\n","[SoftImpute] Iter 34: observed MAE=0.461870 rank=2\n","[SoftImpute] Iter 35: observed MAE=0.461872 rank=2\n","[SoftImpute] Iter 36: observed MAE=0.461874 rank=2\n","[SoftImpute] Iter 37: observed MAE=0.461875 rank=2\n","[SoftImpute] Iter 38: observed MAE=0.461877 rank=2\n","[SoftImpute] Iter 39: observed MAE=0.461879 rank=2\n","[SoftImpute] Iter 40: observed MAE=0.461880 rank=2\n","[SoftImpute] Iter 41: observed MAE=0.461882 rank=2\n","[SoftImpute] Iter 42: observed MAE=0.461883 rank=2\n","[SoftImpute] Iter 43: observed MAE=0.461885 rank=2\n","[SoftImpute] Iter 44: observed MAE=0.461886 rank=2\n","[SoftImpute] Iter 45: observed MAE=0.461888 rank=2\n","[SoftImpute] Iter 46: observed MAE=0.461889 rank=2\n","[SoftImpute] Iter 47: observed MAE=0.461890 rank=2\n","[SoftImpute] Iter 48: observed MAE=0.461892 rank=2\n","[SoftImpute] Iter 49: observed MAE=0.461893 rank=2\n","[SoftImpute] Iter 50: observed MAE=0.461894 rank=2\n","[SoftImpute] Iter 51: observed MAE=0.461896 rank=2\n","[SoftImpute] Iter 52: observed MAE=0.461897 rank=2\n","[SoftImpute] Iter 53: observed MAE=0.461898 rank=2\n","[SoftImpute] Iter 54: observed MAE=0.461899 rank=2\n","[SoftImpute] Iter 55: observed MAE=0.461900 rank=2\n","[SoftImpute] Iter 56: observed MAE=0.461902 rank=2\n","[SoftImpute] Iter 57: observed MAE=0.461903 rank=2\n","[SoftImpute] Iter 58: observed MAE=0.461904 rank=2\n","[SoftImpute] Iter 59: observed MAE=0.461905 rank=2\n","[SoftImpute] Iter 60: observed MAE=0.461906 rank=2\n","[SoftImpute] Iter 61: observed MAE=0.461907 rank=2\n","[SoftImpute] Iter 62: observed MAE=0.461908 rank=2\n","[SoftImpute] Iter 63: observed MAE=0.461909 rank=2\n","[SoftImpute] Iter 64: observed MAE=0.461910 rank=2\n","[SoftImpute] Iter 65: observed MAE=0.461911 rank=2\n","[SoftImpute] Iter 66: observed MAE=0.461912 rank=2\n","[SoftImpute] Iter 67: observed MAE=0.461913 rank=2\n","[SoftImpute] Iter 68: observed MAE=0.461914 rank=2\n","[SoftImpute] Iter 69: observed MAE=0.461914 rank=2\n","[SoftImpute] Iter 70: observed MAE=0.461915 rank=2\n","[SoftImpute] Iter 71: observed MAE=0.461916 rank=2\n","[SoftImpute] Iter 72: observed MAE=0.461917 rank=2\n","[SoftImpute] Iter 73: observed MAE=0.461918 rank=2\n","[SoftImpute] Iter 74: observed MAE=0.461919 rank=2\n","[SoftImpute] Iter 75: observed MAE=0.461919 rank=2\n","[SoftImpute] Iter 76: observed MAE=0.461920 rank=2\n","[SoftImpute] Iter 77: observed MAE=0.461921 rank=2\n","[SoftImpute] Iter 78: observed MAE=0.461921 rank=2\n","[SoftImpute] Iter 79: observed MAE=0.461922 rank=2\n","[SoftImpute] Iter 80: observed MAE=0.461923 rank=2\n","[SoftImpute] Iter 81: observed MAE=0.461924 rank=2\n","[SoftImpute] Iter 82: observed MAE=0.461924 rank=2\n","[SoftImpute] Iter 83: observed MAE=0.461925 rank=2\n","[SoftImpute] Iter 84: observed MAE=0.461926 rank=2\n","[SoftImpute] Iter 85: observed MAE=0.461926 rank=2\n","[SoftImpute] Iter 86: observed MAE=0.461927 rank=2\n","[SoftImpute] Iter 87: observed MAE=0.461927 rank=2\n","[SoftImpute] Iter 88: observed MAE=0.461928 rank=2\n","[SoftImpute] Iter 89: observed MAE=0.461929 rank=2\n","[SoftImpute] Iter 90: observed MAE=0.461929 rank=2\n","[SoftImpute] Iter 91: observed MAE=0.461930 rank=2\n","[SoftImpute] Iter 92: observed MAE=0.461930 rank=2\n","[SoftImpute] Iter 93: observed MAE=0.461931 rank=2\n","[SoftImpute] Iter 94: observed MAE=0.461931 rank=2\n","[SoftImpute] Iter 95: observed MAE=0.461932 rank=2\n","[SoftImpute] Iter 96: observed MAE=0.461932 rank=2\n","[SoftImpute] Iter 97: observed MAE=0.461933 rank=2\n","[SoftImpute] Iter 98: observed MAE=0.461933 rank=2\n","[SoftImpute] Iter 99: observed MAE=0.461934 rank=2\n","[SoftImpute] Iter 100: observed MAE=0.461934 rank=2\n","[SoftImpute] Stopped after iteration 100 for lambda=72.978768\n","[SoftImpute] Max Singular Value of X_init = 7096656.071596\n","[SoftImpute] Iter 1: observed MAE=502.997186 rank=2\n","[SoftImpute] Iter 2: observed MAE=500.145198 rank=2\n","[SoftImpute] Iter 3: observed MAE=499.872248 rank=2\n","[SoftImpute] Iter 4: observed MAE=499.838890 rank=2\n","[SoftImpute] Iter 5: observed MAE=499.834125 rank=2\n","[SoftImpute] Iter 6: observed MAE=499.833111 rank=2\n","[SoftImpute] Iter 7: observed MAE=499.832601 rank=2\n","[SoftImpute] Iter 8: observed MAE=499.832165 rank=2\n","[SoftImpute] Iter 9: observed MAE=499.831746 rank=2\n","[SoftImpute] Iter 10: observed MAE=499.831337 rank=2\n","[SoftImpute] Iter 11: observed MAE=499.830936 rank=2\n","[SoftImpute] Iter 12: observed MAE=499.830543 rank=2\n","[SoftImpute] Iter 13: observed MAE=499.830158 rank=2\n","[SoftImpute] Iter 14: observed MAE=499.829780 rank=2\n","[SoftImpute] Iter 15: observed MAE=499.829410 rank=2\n","[SoftImpute] Iter 16: observed MAE=499.829048 rank=2\n","[SoftImpute] Iter 17: observed MAE=499.828693 rank=2\n","[SoftImpute] Iter 18: observed MAE=499.828344 rank=2\n","[SoftImpute] Iter 19: observed MAE=499.828003 rank=2\n","[SoftImpute] Iter 20: observed MAE=499.827669 rank=2\n","[SoftImpute] Iter 21: observed MAE=499.827341 rank=2\n","[SoftImpute] Iter 22: observed MAE=499.827020 rank=2\n","[SoftImpute] Iter 23: observed MAE=499.826705 rank=2\n","[SoftImpute] Iter 24: observed MAE=499.826396 rank=2\n","[SoftImpute] Iter 25: observed MAE=499.826094 rank=2\n","[SoftImpute] Iter 26: observed MAE=499.825798 rank=2\n","[SoftImpute] Iter 27: observed MAE=499.825507 rank=2\n","[SoftImpute] Iter 28: observed MAE=499.825223 rank=2\n","[SoftImpute] Iter 29: observed MAE=499.824944 rank=2\n","[SoftImpute] Iter 30: observed MAE=499.824670 rank=2\n","[SoftImpute] Iter 31: observed MAE=499.824402 rank=2\n","[SoftImpute] Iter 32: observed MAE=499.824140 rank=2\n","[SoftImpute] Iter 33: observed MAE=499.823883 rank=2\n","[SoftImpute] Iter 34: observed MAE=499.823630 rank=2\n","[SoftImpute] Iter 35: observed MAE=499.823383 rank=2\n","[SoftImpute] Iter 36: observed MAE=499.823141 rank=2\n","[SoftImpute] Iter 37: observed MAE=499.822904 rank=2\n","[SoftImpute] Iter 38: observed MAE=499.822671 rank=2\n","[SoftImpute] Iter 39: observed MAE=499.822443 rank=2\n","[SoftImpute] Iter 40: observed MAE=499.822220 rank=2\n","[SoftImpute] Iter 41: observed MAE=499.822001 rank=2\n","[SoftImpute] Iter 42: observed MAE=499.821786 rank=2\n","[SoftImpute] Iter 43: observed MAE=499.821576 rank=2\n","[SoftImpute] Iter 44: observed MAE=499.821370 rank=2\n","[SoftImpute] Iter 45: observed MAE=499.821168 rank=2\n","[SoftImpute] Iter 46: observed MAE=499.820970 rank=2\n","[SoftImpute] Iter 47: observed MAE=499.820776 rank=2\n","[SoftImpute] Iter 48: observed MAE=499.820586 rank=2\n","[SoftImpute] Iter 49: observed MAE=499.820400 rank=2\n","[SoftImpute] Iter 50: observed MAE=499.820217 rank=2\n","[SoftImpute] Iter 51: observed MAE=499.820038 rank=2\n","[SoftImpute] Iter 52: observed MAE=499.819863 rank=2\n","[SoftImpute] Iter 53: observed MAE=499.819691 rank=2\n","[SoftImpute] Iter 54: observed MAE=499.819523 rank=2\n","[SoftImpute] Iter 55: observed MAE=499.819358 rank=2\n","[SoftImpute] Iter 56: observed MAE=499.819196 rank=2\n","[SoftImpute] Iter 57: observed MAE=499.819038 rank=2\n","[SoftImpute] Iter 58: observed MAE=499.818882 rank=2\n","[SoftImpute] Iter 59: observed MAE=499.818730 rank=2\n","[SoftImpute] Iter 60: observed MAE=499.818581 rank=2\n","[SoftImpute] Iter 61: observed MAE=499.818435 rank=2\n","[SoftImpute] Iter 62: observed MAE=499.818292 rank=2\n","[SoftImpute] Iter 63: observed MAE=499.818151 rank=2\n","[SoftImpute] Iter 64: observed MAE=499.818014 rank=2\n","[SoftImpute] Iter 65: observed MAE=499.817879 rank=2\n","[SoftImpute] Iter 66: observed MAE=499.817747 rank=2\n","[SoftImpute] Iter 67: observed MAE=499.817617 rank=2\n","[SoftImpute] Iter 68: observed MAE=499.817490 rank=2\n","[SoftImpute] Iter 69: observed MAE=499.817366 rank=2\n","[SoftImpute] Iter 70: observed MAE=499.817244 rank=2\n","[SoftImpute] Iter 71: observed MAE=499.817125 rank=2\n","[SoftImpute] Iter 72: observed MAE=499.817008 rank=2\n","[SoftImpute] Iter 73: observed MAE=499.816893 rank=2\n","[SoftImpute] Iter 74: observed MAE=499.816780 rank=2\n","[SoftImpute] Iter 75: observed MAE=499.816670 rank=2\n","[SoftImpute] Iter 76: observed MAE=499.816562 rank=2\n","[SoftImpute] Iter 77: observed MAE=499.816457 rank=2\n","[SoftImpute] Iter 78: observed MAE=499.816353 rank=2\n","[SoftImpute] Iter 79: observed MAE=499.816251 rank=2\n","[SoftImpute] Iter 80: observed MAE=499.816152 rank=2\n","[SoftImpute] Iter 81: observed MAE=499.816054 rank=2\n","[SoftImpute] Iter 82: observed MAE=499.815958 rank=2\n","[SoftImpute] Iter 83: observed MAE=499.815865 rank=2\n","[SoftImpute] Iter 84: observed MAE=499.815773 rank=2\n","[SoftImpute] Iter 85: observed MAE=499.815683 rank=2\n","[SoftImpute] Iter 86: observed MAE=499.815595 rank=2\n","[SoftImpute] Iter 87: observed MAE=499.815508 rank=2\n","[SoftImpute] Iter 88: observed MAE=499.815424 rank=2\n","[SoftImpute] Iter 89: observed MAE=499.815341 rank=2\n","[SoftImpute] Iter 90: observed MAE=499.815259 rank=2\n","[SoftImpute] Iter 91: observed MAE=499.815180 rank=2\n","[SoftImpute] Iter 92: observed MAE=499.815102 rank=2\n","[SoftImpute] Iter 93: observed MAE=499.815025 rank=2\n","[SoftImpute] Iter 94: observed MAE=499.814950 rank=2\n","[SoftImpute] Stopped after iteration 94 for lambda=141933.121432\n","[SoftImpute] Max Singular Value of X_init = 380276.827925\n","[SoftImpute] Iter 1: observed MAE=10.305377 rank=3\n","[SoftImpute] Iter 2: observed MAE=10.320851 rank=3\n","[SoftImpute] Iter 3: observed MAE=10.344036 rank=3\n","[SoftImpute] Iter 4: observed MAE=10.359575 rank=3\n","[SoftImpute] Iter 5: observed MAE=10.370968 rank=3\n","[SoftImpute] Iter 6: observed MAE=10.379305 rank=3\n","[SoftImpute] Iter 7: observed MAE=10.385095 rank=3\n","[SoftImpute] Iter 8: observed MAE=10.388857 rank=3\n","[SoftImpute] Iter 9: observed MAE=10.391064 rank=3\n","[SoftImpute] Iter 10: observed MAE=10.392159 rank=3\n","[SoftImpute] Iter 11: observed MAE=10.392279 rank=3\n","[SoftImpute] Iter 12: observed MAE=10.391859 rank=3\n","[SoftImpute] Iter 13: observed MAE=10.390964 rank=3\n","[SoftImpute] Iter 14: observed MAE=10.389766 rank=3\n","[SoftImpute] Iter 15: observed MAE=10.388402 rank=3\n","[SoftImpute] Iter 16: observed MAE=10.387025 rank=3\n","[SoftImpute] Iter 17: observed MAE=10.385731 rank=3\n","[SoftImpute] Iter 18: observed MAE=10.384517 rank=3\n","[SoftImpute] Iter 19: observed MAE=10.383353 rank=3\n","[SoftImpute] Iter 20: observed MAE=10.382298 rank=3\n","[SoftImpute] Iter 21: observed MAE=10.381469 rank=3\n","[SoftImpute] Iter 22: observed MAE=10.380836 rank=3\n","[SoftImpute] Iter 23: observed MAE=10.380402 rank=3\n","[SoftImpute] Iter 24: observed MAE=10.380260 rank=3\n","[SoftImpute] Iter 25: observed MAE=10.380422 rank=3\n","[SoftImpute] Iter 26: observed MAE=10.380959 rank=3\n","[SoftImpute] Iter 27: observed MAE=10.381742 rank=3\n","[SoftImpute] Iter 28: observed MAE=10.382735 rank=3\n","[SoftImpute] Iter 29: observed MAE=10.384523 rank=3\n","[SoftImpute] Iter 30: observed MAE=10.386857 rank=3\n","[SoftImpute] Iter 31: observed MAE=10.389594 rank=3\n","[SoftImpute] Iter 32: observed MAE=10.392736 rank=3\n","[SoftImpute] Iter 33: observed MAE=10.396230 rank=3\n","[SoftImpute] Iter 34: observed MAE=10.399814 rank=3\n","[SoftImpute] Iter 35: observed MAE=10.403546 rank=3\n","[SoftImpute] Iter 36: observed MAE=10.407374 rank=3\n","[SoftImpute] Iter 37: observed MAE=10.411132 rank=3\n","[SoftImpute] Iter 38: observed MAE=10.414818 rank=3\n","[SoftImpute] Iter 39: observed MAE=10.418566 rank=3\n","[SoftImpute] Iter 40: observed MAE=10.422391 rank=3\n","[SoftImpute] Iter 41: observed MAE=10.426426 rank=3\n","[SoftImpute] Iter 42: observed MAE=10.430703 rank=3\n","[SoftImpute] Iter 43: observed MAE=10.435207 rank=3\n","[SoftImpute] Iter 44: observed MAE=10.440184 rank=3\n","[SoftImpute] Iter 45: observed MAE=10.299443 rank=2\n","[SoftImpute] Iter 46: observed MAE=10.189086 rank=2\n","[SoftImpute] Iter 47: observed MAE=10.121687 rank=2\n","[SoftImpute] Iter 48: observed MAE=10.079863 rank=2\n","[SoftImpute] Iter 49: observed MAE=10.053615 rank=2\n","[SoftImpute] Iter 50: observed MAE=10.037072 rank=2\n","[SoftImpute] Iter 51: observed MAE=10.026618 rank=2\n","[SoftImpute] Iter 52: observed MAE=10.019974 rank=2\n","[SoftImpute] Iter 53: observed MAE=10.015705 rank=2\n","[SoftImpute] Iter 54: observed MAE=10.012942 rank=2\n","[SoftImpute] Iter 55: observed MAE=10.011140 rank=2\n","[SoftImpute] Iter 56: observed MAE=10.009955 rank=2\n","[SoftImpute] Iter 57: observed MAE=10.009165 rank=2\n","[SoftImpute] Iter 58: observed MAE=10.008631 rank=2\n","[SoftImpute] Stopped after iteration 58 for lambda=7605.536558\n","9\n","9\n","29\n","0: \n","[]\n","1: services, \n","['Internet Type', 'Streaming TV', 'Total Revenue', 'Device Protection Plan', 'Unlimited Data', 'Payment Method', 'Online Backup', 'Contract', 'Internet Service', 'Offer', 'Paperless Billing', 'Quarter', 'Avg Monthly GB Download', 'Total Refunds', 'Streaming Music', 'Online Security', 'Number of Referrals', 'Premium Tech Support', 'Total Extra Data Charges', 'Total Long Distance Charges', 'Streaming Movies', 'Referred a Friend', 'Monthly Charge', 'Tenure in Months', 'Phone Service', 'Avg Monthly Long Distance Charges', 'Multiple Lines', 'Total Charges', 'Customer ID']\n","2: location, \n","['Zip Code', 'Population', 'State', 'City', 'Longitude', 'ID', 'Latitude', 'Customer ID', 'Country']\n","3: location, services, \n","['Internet Type', 'Streaming TV', 'Total Revenue', 'Device Protection Plan', 'Unlimited Data', 'Payment Method', 'Latitude', 'Online Backup', 'Contract', 'Zip Code', 'Internet Service', 'Offer', 'Paperless Billing', 'Population', 'Quarter', 'Avg Monthly GB Download', 'Total Refunds', 'Country', 'Streaming Music', 'State', 'City', 'Online Security', 'Number of Referrals', 'Premium Tech Support', 'Total Extra Data Charges', 'Total Long Distance Charges', 'Streaming Movies', 'Referred a Friend', 'Monthly Charge', 'Tenure in Months', 'Longitude', 'ID', 'Phone Service', 'Avg Monthly Long Distance Charges', 'Multiple Lines', 'Total Charges', 'Customer ID']\n","4: demographics, \n","['Under 30', 'Gender', 'Senior Citizen', 'Dependents', 'Number of Dependents', 'Married', 'Count', 'Customer ID', 'Age']\n","5: demographics, services, \n","['Internet Type', 'Streaming TV', 'Total Revenue', 'Number of Dependents', 'Device Protection Plan', 'Unlimited Data', 'Payment Method', 'Online Backup', 'Contract', 'Internet Service', 'Offer', 'Paperless Billing', 'Senior Citizen', 'Quarter', 'Avg Monthly GB Download', 'Total Refunds', 'Age', 'Streaming Music', 'Gender', 'Online Security', 'Number of Referrals', 'Count', 'Premium Tech Support', 'Total Extra Data Charges', 'Total Long Distance Charges', 'Streaming Movies', 'Referred a Friend', 'Monthly Charge', 'Tenure in Months', 'Dependents', 'Under 30', 'Phone Service', 'Married', 'Avg Monthly Long Distance Charges', 'Multiple Lines', 'Total Charges', 'Customer ID']\n","6: demographics, location, \n","['Zip Code', 'Population', 'Dependents', 'Gender', 'Senior Citizen', 'Under 30', 'State', 'City', 'Longitude', 'ID', 'Number of Dependents', 'Married', 'Count', 'Latitude', 'Customer ID', 'Country', 'Age']\n","7: demographics, location, services, \n","['Internet Type', 'Streaming TV', 'Total Revenue', 'Number of Dependents', 'Device Protection Plan', 'Unlimited Data', 'Payment Method', 'Latitude', 'Online Backup', 'Contract', 'Zip Code', 'Internet Service', 'Offer', 'Paperless Billing', 'Population', 'Senior Citizen', 'Quarter', 'Avg Monthly GB Download', 'Total Refunds', 'Country', 'Age', 'Streaming Music', 'Gender', 'State', 'City', 'Online Security', 'Number of Referrals', 'Count', 'Premium Tech Support', 'Total Extra Data Charges', 'Total Long Distance Charges', 'Streaming Movies', 'Referred a Friend', 'Monthly Charge', 'Tenure in Months', 'Dependents', 'Under 30', 'Longitude', 'ID', 'Phone Service', 'Married', 'Avg Monthly Long Distance Charges', 'Multiple Lines', 'Total Charges', 'Customer ID']\n"]}]},{"cell_type":"code","source":["g1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":557},"id":"AUo8ZInWaJTK","executionInfo":{"status":"ok","timestamp":1642345433081,"user_tz":-480,"elapsed":269,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"5d6562ef-c2af-493c-db4a-982133d3c1e8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-76b3dba8-5ae7-402e-8de8-2cf70e92210a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Multiple Lines</th>\n","      <th>Monthly Charge</th>\n","      <th>Online Security</th>\n","      <th>Phone Service</th>\n","      <th>Contract</th>\n","      <th>Internet Type</th>\n","      <th>Avg Monthly Long Distance Charges</th>\n","      <th>Total Refunds</th>\n","      <th>Paperless Billing</th>\n","      <th>Unlimited Data</th>\n","      <th>Premium Tech Support</th>\n","      <th>Referred a Friend</th>\n","      <th>Streaming TV</th>\n","      <th>Avg Monthly GB Download</th>\n","      <th>Device Protection Plan</th>\n","      <th>Total Long Distance Charges</th>\n","      <th>Tenure in Months</th>\n","      <th>Internet Service</th>\n","      <th>Total Charges</th>\n","      <th>Payment Method</th>\n","      <th>Online Backup</th>\n","      <th>Offer</th>\n","      <th>Streaming Movies</th>\n","      <th>Total Revenue</th>\n","      <th>Streaming Music</th>\n","      <th>Total Extra Data Charges</th>\n","      <th>Number of Referrals</th>\n","      <th>Satisfaction Score</th>\n","      <th>Churn Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.000000</td>\n","      <td>39.650000</td>\n","      <td>0.000000</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>8.000000</td>\n","      <td>0.124402</td>\n","      <td>0.00</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>695.580049</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>59.65</td>\n","      <td>0.000000</td>\n","      <td>20.000000</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.000000</td>\n","      <td>80.650000</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>48.850000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>17.000000</td>\n","      <td>0.000000</td>\n","      <td>390.80</td>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>633.300000</td>\n","      <td>0.711614</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>0.0</td>\n","      <td>1024.10</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000000</td>\n","      <td>98.500000</td>\n","      <td>0.000000</td>\n","      <td>0.92994</td>\n","      <td>0.0</td>\n","      <td>1.659594</td>\n","      <td>19.760000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.734746</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>12.000000</td>\n","      <td>1.000000</td>\n","      <td>494.00</td>\n","      <td>25.0</td>\n","      <td>1.0</td>\n","      <td>2514.500000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>1.0</td>\n","      <td>2995.07</td>\n","      <td>0.320948</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.473639</td>\n","      <td>76.500000</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>6.330000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.365237</td>\n","      <td>17.608253</td>\n","      <td>0.443023</td>\n","      <td>234.21</td>\n","      <td>37.0</td>\n","      <td>1.0</td>\n","      <td>2868.150000</td>\n","      <td>0.000000</td>\n","      <td>0.581115</td>\n","      <td>3.000000</td>\n","      <td>0.0</td>\n","      <td>3102.36</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.000000</td>\n","      <td>78.050000</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>3.330000</td>\n","      <td>8.839773</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>18.000000</td>\n","      <td>0.223587</td>\n","      <td>89.91</td>\n","      <td>27.0</td>\n","      <td>1.0</td>\n","      <td>2135.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>0.0</td>\n","      <td>2235.41</td>\n","      <td>0.000000</td>\n","      <td>10.000000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3233</th>\n","      <td>0.000000</td>\n","      <td>69.500000</td>\n","      <td>0.395009</td>\n","      <td>1.00000</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>29.051614</td>\n","      <td>20.190000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.640061</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.454765</td>\n","      <td>0.000000</td>\n","      <td>1331.52</td>\n","      <td>38.0</td>\n","      <td>1.0</td>\n","      <td>2625.250000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>3936.58</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3234</th>\n","      <td>0.594008</td>\n","      <td>58.979686</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>2.0</td>\n","      <td>3.000000</td>\n","      <td>22.770000</td>\n","      <td>19.310000</td>\n","      <td>0.609059</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1639.44</td>\n","      <td>72.0</td>\n","      <td>0.0</td>\n","      <td>1419.400000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>3039.53</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3235</th>\n","      <td>1.000000</td>\n","      <td>84.800000</td>\n","      <td>0.465575</td>\n","      <td>1.00000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>36.050000</td>\n","      <td>48.230000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>24.000000</td>\n","      <td>0.401474</td>\n","      <td>865.20</td>\n","      <td>24.0</td>\n","      <td>1.0</td>\n","      <td>1990.500000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>1.833161</td>\n","      <td>1.0</td>\n","      <td>2807.47</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3236</th>\n","      <td>0.000000</td>\n","      <td>31.718135</td>\n","      <td>1.000000</td>\n","      <td>0.00000</td>\n","      <td>0.0</td>\n","      <td>1.238374</td>\n","      <td>0.000000</td>\n","      <td>27.240000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>17.000000</td>\n","      <td>0.000000</td>\n","      <td>0.00</td>\n","      <td>11.0</td>\n","      <td>1.0</td>\n","      <td>346.450000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.981020</td>\n","      <td>0.0</td>\n","      <td>319.21</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3237</th>\n","      <td>1.000000</td>\n","      <td>105.650000</td>\n","      <td>0.714863</td>\n","      <td>1.00000</td>\n","      <td>2.0</td>\n","      <td>2.000000</td>\n","      <td>30.960000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","      <td>0.881589</td>\n","      <td>0.280435</td>\n","      <td>11.000000</td>\n","      <td>1.000000</td>\n","      <td>2043.36</td>\n","      <td>66.0</td>\n","      <td>1.0</td>\n","      <td>6844.500000</td>\n","      <td>0.031623</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>8887.86</td>\n","      <td>1.000000</td>\n","      <td>0.995112</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3238 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76b3dba8-5ae7-402e-8de8-2cf70e92210a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-76b3dba8-5ae7-402e-8de8-2cf70e92210a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-76b3dba8-5ae7-402e-8de8-2cf70e92210a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      Multiple Lines  Monthly Charge  ...  Satisfaction Score  Churn Category\n","0           0.000000       39.650000  ...                 NaN               1\n","1           1.000000       80.650000  ...                 3.0               1\n","2           0.000000       98.500000  ...                 2.0               2\n","3           0.473639       76.500000  ...                 2.0               4\n","4           1.000000       78.050000  ...                 1.0               1\n","...              ...             ...  ...                 ...             ...\n","3233        0.000000       69.500000  ...                 3.0               0\n","3234        0.594008       58.979686  ...                 5.0               0\n","3235        1.000000       84.800000  ...                 3.0               0\n","3236        0.000000       31.718135  ...                 NaN               0\n","3237        1.000000      105.650000  ...                 4.0               0\n","\n","[3238 rows x 29 columns]"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","metadata":{"id":"dQIqtOz6euZp"},"source":["Merge all"]},{"cell_type":"code","source":["data.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BRruGMG2HQc4","executionInfo":{"status":"ok","timestamp":1642323632369,"user_tz":-480,"elapsed":427,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"7a92b17a-932c-4110-98f9-c2150ba13855"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Customer ID                          4226\n","Count                                 389\n","Gender                                374\n","Age                                   265\n","Under 30                              392\n","Senior Citizen                        379\n","Married                               368\n","Dependents                            415\n","Number of Dependents                  396\n","Country                                 1\n","State                                   1\n","City                                 1432\n","Zip Code                             1923\n","Latitude                             1935\n","Longitude                            1926\n","ID                                   1923\n","Population                           1877\n","Quarter                                 1\n","Referred a Friend                     455\n","Number of Referrals                   454\n","Tenure in Months                      509\n","Offer                                 456\n","Phone Service                         486\n","Avg Monthly Long Distance Charges    2644\n","Multiple Lines                        487\n","Internet Service                      445\n","Internet Type                         489\n","Avg Monthly GB Download               533\n","Online Security                       461\n","Online Backup                         490\n","Device Protection Plan                456\n","Premium Tech Support                  469\n","Streaming TV                          452\n","Streaming Movies                      460\n","Streaming Music                       485\n","Unlimited Data                        455\n","Contract                              453\n","Paperless Billing                     469\n","Payment Method                        472\n","Monthly Charge                       1676\n","Total Charges                        3571\n","Total Refunds                         714\n","Total Extra Data Charges              501\n","Total Long Distance Charges          3323\n","Total Revenue                        3679\n","Satisfaction Score                      5\n","Churn Category                          6\n","dtype: int64"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["for i in range(1,8):\n","  gg = pd.read_csv('/content/drive/MyDrive/HTML final project/train_group'+str(i)+'.csv')\n","  print(gg.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xCbzihSAzLmx","executionInfo":{"status":"ok","timestamp":1642318768389,"user_tz":-480,"elapsed":409,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"11de4524-ed0b-498a-c02b-5d70af7a17a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(3691, 31)\n","(3712, 11)\n","(3219, 39)\n","(3702, 11)\n","(3238, 39)\n","(3240, 19)\n","(2815, 47)\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zztManG9etRm"},"outputs":[],"source":["# location.drop(['Count'], axis=1, inplace=True)\n","# services.drop(['Count'], axis=1, inplace=True)\n","# merge all dataframe and assign it to \"data\"\n","# will lose a few datapoints (rows) because there are some different \"Customer ID\" in different csv\n","data = pd.merge(pd.merge(demographics, location, on=[\"Customer ID\"],how = 'outer'),\n","                pd.merge(services, satisfaction, on=[\"Customer ID\"],how = 'outer'), on=[\"Customer ID\"],how = 'outer')\n","\n","test = pd.merge(data, Test_IDs, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"inner\").replace({'Churn Category': mapping_result})\n","\n","# train = pd.merge(data, Train_IDs, how=\"inner\", on=\"Customer ID\")\n","data = pd.merge(data, status, on=[\"Customer ID\"],left_index=False, right_index=False, how =\"inner\").replace({'Churn Category': mapping_result})\n","data = data.dropna(subset=['Customer ID'])"]},{"cell_type":"code","source":["print(Train_IDs.shape)\n","print(Test_IDs.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pFbsZpIvbIuY","executionInfo":{"status":"ok","timestamp":1642261731995,"user_tz":-480,"elapsed":302,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"6dbef138-2b87-4835-e194-ab5080baf3c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(5634, 1)\n","(1409, 1)\n"]}]},{"cell_type":"code","source":["# data.to_csv('__data.csv')\n","# !cp __data.csv \"/content/drive/MyDrive/HTML final project/\"\n","data = pd.merge(data, Train_IDs, on=[\"Customer ID\"],how = 'inner')"],"metadata":{"id":"O5M2uQBlMe_2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def describe_nan(df):\n","    return pd.DataFrame([(i, df[df[i].isna()].shape[0],df[df[i].isna()].shape[0]/df.shape[0]) for i in df.columns], columns=['column', 'nan_counts', 'nan_rate'])\n","\n","# describe_nan(data)\n","for col in data.columns:\n","  if(train[col].nunique() == 1):\n","    print(col +  \":\" + str(train[col].nunique()))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iwtujIyIz8gA","executionInfo":{"status":"ok","timestamp":1642251555171,"user_tz":-480,"elapsed":294,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"eb72e360-584d-4253-99c5-639f112ab6ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Count:1\n","Country:1\n","State:1\n","Quarter:1\n"]}]},{"cell_type":"code","source":["data.drop(['Country','Count','State','Quarter'], axis=1, inplace=True)"],"metadata":{"id":"xOckMdf10Nxo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":731},"id":"u_PvSQxn0odJ","executionInfo":{"status":"ok","timestamp":1642251590156,"user_tz":-480,"elapsed":326,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"316ece74-8341-4c70-eb8d-92abf3753874"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-caf8b440-a1fb-40dd-aab9-fa6bed5b4b53\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Under 30</th>\n","      <th>Senior Citizen</th>\n","      <th>Married</th>\n","      <th>Dependents</th>\n","      <th>Number of Dependents</th>\n","      <th>City</th>\n","      <th>Zip Code</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>ID</th>\n","      <th>Population</th>\n","      <th>Referred a Friend</th>\n","      <th>Number of Referrals</th>\n","      <th>Tenure in Months</th>\n","      <th>Offer</th>\n","      <th>Phone Service</th>\n","      <th>Avg Monthly Long Distance Charges</th>\n","      <th>Multiple Lines</th>\n","      <th>Internet Service</th>\n","      <th>Internet Type</th>\n","      <th>Avg Monthly GB Download</th>\n","      <th>Online Security</th>\n","      <th>Online Backup</th>\n","      <th>Device Protection Plan</th>\n","      <th>Premium Tech Support</th>\n","      <th>Streaming TV</th>\n","      <th>Streaming Movies</th>\n","      <th>Streaming Music</th>\n","      <th>Unlimited Data</th>\n","      <th>Contract</th>\n","      <th>Paperless Billing</th>\n","      <th>Payment Method</th>\n","      <th>Monthly Charge</th>\n","      <th>Total Charges</th>\n","      <th>Total Refunds</th>\n","      <th>Total Extra Data Charges</th>\n","      <th>Total Long Distance Charges</th>\n","      <th>Total Revenue</th>\n","      <th>Satisfaction Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1746-TGTWV</td>\n","      <td>1.0</td>\n","      <td>78.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>550.0</td>\n","      <td>90022.0</td>\n","      <td>34.023810</td>\n","      <td>-118.156582</td>\n","      <td>21.0</td>\n","      <td>68701.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.65</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>0.00</td>\n","      <td>59.65</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8499-BRXTD</td>\n","      <td>0.0</td>\n","      <td>74.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>48.85</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>17.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>80.65</td>\n","      <td>633.30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>390.80</td>\n","      <td>1024.10</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2041-JIJCI</td>\n","      <td>1.0</td>\n","      <td>71.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>550.0</td>\n","      <td>NaN</td>\n","      <td>34.108833</td>\n","      <td>-118.229715</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5832-EXGTT</td>\n","      <td>0.0</td>\n","      <td>78.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>445.0</td>\n","      <td>90303.0</td>\n","      <td>33.936291</td>\n","      <td>-118.332639</td>\n","      <td>100.0</td>\n","      <td>27778.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>25.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>19.76</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>12.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>98.50</td>\n","      <td>2514.50</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>494.00</td>\n","      <td>2995.07</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8350-NYMVI</td>\n","      <td>NaN</td>\n","      <td>80.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1067.0</td>\n","      <td>90602.0</td>\n","      <td>NaN</td>\n","      <td>-118.020188</td>\n","      <td>114.0</td>\n","      <td>26265.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>37.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>6.33</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>76.50</td>\n","      <td>2868.15</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>234.21</td>\n","      <td>3102.36</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5629</th>\n","      <td>7619-ODSGN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>859.0</td>\n","      <td>95045.0</td>\n","      <td>36.810568</td>\n","      <td>-121.503022</td>\n","      <td>1105.0</td>\n","      <td>3402.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>44.55</td>\n","      <td>174.30</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>0.00</td>\n","      <td>184.30</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5630</th>\n","      <td>7562-GSUHK</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>776.0</td>\n","      <td>94569.0</td>\n","      <td>38.035707</td>\n","      <td>-122.196821</td>\n","      <td>997.0</td>\n","      <td>173.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>27.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>30.36</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>19.15</td>\n","      <td>537.35</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>819.72</td>\n","      <td>1357.07</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>5631</th>\n","      <td>4123-FCVCB</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>708.0</td>\n","      <td>93647.0</td>\n","      <td>36.600185</td>\n","      <td>-119.175655</td>\n","      <td>825.0</td>\n","      <td>9780.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>5632</th>\n","      <td>7481-ATQQS</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>711.0</td>\n","      <td>93950.0</td>\n","      <td>NaN</td>\n","      <td>-121.926417</td>\n","      <td>876.0</td>\n","      <td>15449.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>33.92</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>746.24</td>\n","      <td>1216.44</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>5633</th>\n","      <td>8668-KNZTI</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>373.0</td>\n","      <td>93926.0</td>\n","      <td>NaN</td>\n","      <td>-121.396719</td>\n","      <td>869.0</td>\n","      <td>9023.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>26.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>45.70</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>19.80</td>\n","      <td>457.30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>1645.50</td>\n","      <td>3.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5634 rows × 42 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-caf8b440-a1fb-40dd-aab9-fa6bed5b4b53')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-caf8b440-a1fb-40dd-aab9-fa6bed5b4b53 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-caf8b440-a1fb-40dd-aab9-fa6bed5b4b53');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     Customer ID  Gender  ...  Total Revenue  Satisfaction Score\n","0     1746-TGTWV     1.0  ...          59.65                 NaN\n","1     8499-BRXTD     0.0  ...        1024.10                 3.0\n","2     2041-JIJCI     1.0  ...            NaN                 NaN\n","3     5832-EXGTT     0.0  ...        2995.07                 2.0\n","4     8350-NYMVI     NaN  ...        3102.36                 2.0\n","...          ...     ...  ...            ...                 ...\n","5629  7619-ODSGN     NaN  ...         184.30                 NaN\n","5630  7562-GSUHK     NaN  ...        1357.07                 3.0\n","5631  4123-FCVCB     NaN  ...            NaN                 5.0\n","5632  7481-ATQQS     NaN  ...        1216.44                 5.0\n","5633  8668-KNZTI     NaN  ...        1645.50                 3.0\n","\n","[5634 rows x 42 columns]"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["print(Train_IDs.shape)\n","print(Test_IDs.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"guESNOJnL8ls","executionInfo":{"status":"ok","timestamp":1642224180158,"user_tz":-480,"elapsed":500,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"8c27f1dd-07d6-4e46-fa80-5aec06efd7e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(5634, 1)\n","(1409, 1)\n"]}]},{"cell_type":"code","source":["\n","for col in data.columns:\n","  print(col + \" nunique: \"+str(data[col].nunique()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EzBvoxO62MvO","executionInfo":{"status":"ok","timestamp":1642252038262,"user_tz":-480,"elapsed":317,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"}},"outputId":"898cbfe7-78b0-4d0a-999f-c69a239e4892"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Customer ID nunique: 5634\n","Gender nunique: 2\n","Age nunique: 62\n","Under 30 nunique: 2\n","Senior Citizen nunique: 2\n","Married nunique: 2\n","Dependents nunique: 2\n","Number of Dependents nunique: 9\n","City nunique: 1085\n","Zip Code nunique: 1583\n","Latitude nunique: 1596\n","Longitude nunique: 1588\n","ID nunique: 1583\n","Population nunique: 1529\n","Referred a Friend nunique: 2\n","Number of Referrals nunique: 12\n","Tenure in Months nunique: 72\n","Offer nunique: 6\n","Phone Service nunique: 2\n","Avg Monthly Long Distance Charges nunique: 2683\n","Multiple Lines nunique: 2\n","Internet Service nunique: 2\n","Internet Type nunique: 4\n","Avg Monthly GB Download nunique: 49\n","Online Security nunique: 2\n","Online Backup nunique: 2\n","Device Protection Plan nunique: 2\n","Premium Tech Support nunique: 2\n","Streaming TV nunique: 2\n","Streaming Movies nunique: 2\n","Streaming Music nunique: 2\n","Unlimited Data nunique: 2\n","Contract nunique: 3\n","Paperless Billing nunique: 2\n","Payment Method nunique: 3\n","Monthly Charge nunique: 1370\n","Total Charges nunique: 4115\n","Total Refunds nunique: 316\n","Total Extra Data Charges nunique: 16\n","Total Long Distance Charges nunique: 3817\n","Total Revenue nunique: 4303\n","Satisfaction Score nunique: 5\n"]}]},{"cell_type":"code","source":["Satisfaction Score\n","Contract\n","Tenure in Months\n","Number of Referrals\n","Dependents\n","\n"],"metadata":{"id":"Anhls9IthxKl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"QQd5jDgmhzdj"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1Mm5b1Ux2dqSga4BJFVU59_0jy5v0ABmA"},"executionInfo":{"elapsed":148909,"status":"ok","timestamp":1642252651306,"user":{"displayName":"廖勗辰","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14351367155883525903"},"user_tz":-480},"id":"PQH7AqBKktEt","outputId":"97c0a292-79b4-4a7a-b113-ac86469bbaa3"},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["\n","for col in data.columns:\n","  for col2 in data.columns:\n","    if(col!=col2 and int(data[col].nunique()) < 20 and int(data[col2].nunique()) < 20):\n","      x,y = col, col2\n","      train.groupby(x)[y].value_counts(normalize=True,dropna=False).mul(100).unstack().plot.bar(stacked=True,figsize=(6,5), title = col + \" to \" + col2).legend(bbox_to_anchor=(1.0, 1.0))\n","\n","\n","# x,y = 'Gender', 'Churn Category'\n","# train.groupby(x)[y].value_counts(normalize=True,dropna=False).mul(100).unstack().plot.bar(stacked=True,figsize=(6,5), title = col + \" to churn cat\").legend(bbox_to_anchor=(1.0, 1.0))\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fVQ_KJmEeAAc"},"outputs":[],"source":["\n","# set the figure size\n","plt.figure(figsize=(14, 14))\n","\n","# from raw value to percentage\n","for col in train.columns:\n","      x,y = col, 'Churn Category'\n","      total = train.groupby(x)[y].sum().reset_index()\n","      total\n","      # smoker = train[train.smoker=='Yes'].groupby('day')['total_bill'].sum().reset_index()\n","      # smoker['total_bill'] = [i / j * 100 for i,j in zip(smoker['total_bill'], total['total_bill'])]\n","      # total['total_bill'] = [i / j * 100 for i,j in zip(total['total_bill'], total['total_bill'])]\n","\n","      # # bar chart 1 -> top bars (group of 'smoker=No')\n","      # bar1 = sns.barplot(x=\"day\",  y=\"total_bill\", data=total, color='darkblue')\n","\n","      # # bar chart 2 -> bottom bars (group of 'smoker=Yes')\n","      # bar2 = sns.barplot(x=\"day\", y=\"total_bill\", data=smoker, color='lightblue')\n","\n","      # # add legend\n","      # top_bar = mpatches.Patch(color='darkblue', label='smoker = No')\n","      # bottom_bar = mpatches.Patch(color='lightblue', label='smoker = Yes')\n","      # plt.legend(handles=[top_bar, bottom_bar])\n","\n","# show the graph\n","# plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5v9NiBvVguf7"},"outputs":[],"source":["def describe_nan(df):\n","    return pd.DataFrame([(i, df[df[i].isna()].shape[0],df[df[i].isna()].shape[0]/df.shape[0]) for i in df.columns], columns=['column', 'nan_counts', 'nan_rate'])\n","\n","describe_nan(train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_J-9PyZUh-1c"},"outputs":[],"source":["fig, ax = plt.subplots(figsize=(20,20))\n","sns.heatmap(train.isnull())\n","plt.ylabel('Index')\n","plt.xlabel('Featuess')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ghXTT34Whih3"},"outputs":[],"source":["def describe_nan_row(df):\n","    return pd.DataFrame([(i, df.loc[[i]].isna().sum().sum(),  df.loc[[i]].isna().sum().sum()/df.shape[1]) for i in df.shape[0]], columns=['ID', 'nan_counts', 'nan_rate'])\n","\n","nan_rate = describe_nan(train)\n","ax = nan_rate['nan_rate'].plot(kind='bar', figsize=(14,8), title=\"nan_rate\")\n","ax.set_xticklabels(nan_rate['column'])\n","ax.set_xlabel(\"features\")\n","ax.set_ylabel(\"nan_rate\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZpECj8np0YIQ"},"outputs":[],"source":["ax = train_status['Churn Category'].value_counts().plot(kind='bar',\n","                                    figsize=(14,8),\n","                                    title=\"Number for each Churn Category (training set)\")\n","ax.set_xlabel(\"Churn Category\")\n","ax.set_ylabel(\"Count\")\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"YiFNKAa3rwNv"},"source":["## Covariance\n","取abs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QgMDlaZlsErU"},"outputs":[],"source":["# typed_data.drop('Unnamed: 0')\n","cov_new = train.corr()['Churn Category']\n","cov_new = cov_new.drop(['Churn Category']).dropna()\n","cov_new = cov_new.to_frame()\n","cov_new = cov_new.rename(columns={\"Churn Category\": \"Covariance(abs)\"})\n","cov_new['Covariance(abs)'] = cov_new['Covariance(abs)'].abs()\n","cov_new = cov_new.sort_values(by=['Covariance(abs)'],ascending=False, na_position='last')\n","cov_new = cov_new.dropna()\n","cov_new.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UMqX7Gw9sXMs"},"outputs":[],"source":["ax = cov_new['Covariance(abs)'].plot(kind='bar',\n","                                    figsize=(14,8),\n","                                    title=\"Covariance\")\n","ax.set_xlabel(\"features\")\n","ax.set_ylabel(\"covariance\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XAO95CK1sG0Z"},"outputs":[],"source":["\n","cov_d = train_demographics.replace({'Churn Category': mapping_result}).replace({'Yes': 1, 'No': 0}).corr()['Churn Category']\n","cov_d = cov_d.drop(['Count','Churn Category'])\n","cov_l = train_location.replace({'Churn Category': mapping_result}).replace({'Yes': 1, 'No': 0}).corr()['Churn Category']\n","cov_l = cov_l.drop(['Count','Churn Category'])\n","cov_se = train_services.replace({'Churn Category': mapping_result}).replace({'Yes': 1, 'No': 0}).corr()['Churn Category']\n","cov_se = cov_se.drop(['Count','Churn Category'])\n","cov_sa = train_satisfaction.replace({'Churn Category': mapping_result}).replace({'Yes': 1, 'No': 0}).corr()['Churn Category']\n","cov_sa = cov_sa.drop(['Churn Category'])\n","\n","\n","\n","cov = [cov_d, cov_l, cov_se, cov_sa]\n","cov = pd.concat(cov, join = 'inner',verify_integrity = True)\n","cov = cov.to_frame()\n","# cov.columns = ['type','cov']\n","cov = cov.rename(columns={\"Churn Category\": \"Covariance(abs)\"})\n","cov['Covariance(abs)'] = cov['Covariance(abs)'].abs()\n","cov = cov.sort_values(by=['Covariance(abs)'],ascending=False, na_position='first')\n","print(cov.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Usb3ttbwEcsA"},"outputs":[],"source":["ax = cov['Covariance(abs)'].plot(kind='bar',\n","                                    figsize=(14,8),\n","                                    title=\"Covariance\")\n","ax.set_xlabel(\"features\")\n","ax.set_ylabel(\"covariance\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"loUlONw3rzKm"},"source":["Read from folder/data.csv\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ys7-AWclF72V"},"outputs":[],"source":["\n","typed_data = pd.read_csv('/content/drive/MyDrive/HTML final project/data.csv',index_col=0)\n","# typed_data.drop('Unnamed: 0')\n","typed_data = pd.merge(typed_data, train_status, how=\"inner\", on=\"Customer ID\",left_index=False, right_index=False, )\n","cov_new = typed_data.replace({'Churn Category': mapping_result}).corr()['Churn Category']\n","cov_new = cov_new.drop(['Churn Category']).dropna()\n","cov_new = cov_new.to_frame()\n","cov_new = cov_new.rename(columns={\"Churn Category\": \"Covariance(abs)\"})\n","cov_new['Covariance(abs)'] = cov_new['Covariance(abs)'].abs()\n","cov_new = cov_new.sort_values(by=['Covariance(abs)'],ascending=False, na_position='last')\n","\n","cov_new.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"obGbVEBRUxmk"},"outputs":[],"source":["typed_data.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7z_VBDhERcOe"},"outputs":[],"source":["\n","ax = cov_new['Covariance(abs)'].plot(kind='bar',\n","                                    figsize=(14,8),\n","                                    title=\"Covariance\")\n","ax.set_xlabel(\"features\")\n","ax.set_ylabel(\"covariance\")\n","plt.show()"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"split group","provenance":[{"file_id":"14Eeo6fNOOvIwoAKnVy7YFSz-teBhFcHr","timestamp":1642223074093},{"file_id":"1tpvCmxJshVPv3NrUzVamgkozl3l9yJpe","timestamp":1639649309855}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}